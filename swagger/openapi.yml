openapi: '3.0.2'
info:
  title: API
  description: MIEM Taiga API
  contact:
    email: vvkovyazin@miem.hse.ru
  version: 0.0.1-oas3
servers:
  - url: http://track.miem.hse.ru/miem/api/
tags:
- name: admins
  description: Secured Admin-only calls
- name: developers
  description: Operations available to regular developers
paths:
  /users:
    post:
      security:
        - bearerAuth: []
      tags:
      - admins
      summary: добавляет пользователя в проект
      description: |
        Приглашает пользователя в указаный проект по почте
        пользователя в Тайге с определенной ролью.

        В поле project указывается номер проекта.

        Поле is_leader указывает на особые права пользователя в проекте.

        Возвращает данные о приглашении
        
      operationId: projectsUserPOST
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/invite_user'
      responses:
        '401':
          $ref: '#/components/responses/UnauthorizedError'         
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/users_list'
          description: Пользователь успешно добавлен в проект
        "500":
          description: Ошибка со стороны сервера
        "400":
          description: Неправильный запрос
        "404":
          description: Проект или пользователь не найден
      x-swagger-router-controller: Admins
    get:
      security:
        - bearerAuth: []
      tags:
      - developers
      summary: предоставляет список всех приглашений
      description: |
        Предоставляет список всех приглашений пользователей
        в проекты.

        Поле role показывает id роли проекта.
        
      operationId: projectsUsersGET
      
      responses:         
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/users_list'
          description: Список пользователей успешно получен
        "500":
          description: Ошибка со стороны сервера
        "400":
          description: Неправильный запрос
      x-swagger-router-controller: Developers
   
  /users/{inviteId}:
    get:
      security:
        - bearerAuth: []
      tags:
      - developers
      summary: предоставляет список всех приглашений
      description: |
        Предоставляет одно приглашение пользователея по id. 

        Поле role показывает id роли проекта.
      parameters:
      - name: inviteId
        in: path
        description: ID приглашения пользователя
        required: true
        style: simple
        explode: false
        schema:
          type: integer
      operationId: projectUserGET
      responses:         
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/users_list'
          description: Список пользователей успешно получен
        "500":
          description: Ошибка со стороны сервера
        "400":
          description: Неправильный запрос
      x-swagger-router-controller: Developers
    delete:
      security:
        - bearerAuth: []
      tags:
      - admins
      summary: удаляет пользователя из проекта по приглашению
      description: |
        Удаляет пользователя из проекта по id приглашению.
      operationId: projectUserDELETE
      parameters:
      - name: inviteId
        in: path
        description: ID приглашения пользователея
        required: true
        style: simple
        explode: false
        schema:
          type: integer
      responses:
        '401':
          $ref: '#/components/responses/UnauthorizedError'         
        "200":
          description: Пользователь успешно удален из проекта
        "500":
          description: Ошибка на стороне сервера
        "400":
          description: Не были указаны необходимые данные
        "404":
          description: Приглашения с таким ID не существует
      x-swagger-router-controller: Admins
    patch:
      security:
        - bearerAuth: []      
      tags:
      - admins
      summary: изменяет данные о приглашении
      description: |
        Изменяет приглашение пользователя в проект.
        
        Если в проекте уже есть приглашение пользователея,
        то это изменение отразится на нем.

        Поля user, project и role неизменяемы.

        Поле email будет изменено только в приглашении,
        по нему в будущем будут начисляться трудозатраты
        и др. Email у самого пользователея в Тайге останется
        прежним. 
      operationId: projectUserPATCH
      parameters:
      - name: inviteId
        in: path
        description: ID приглашения
        required: true
        style: simple
        explode: false
        schema:
          type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/user_patch_example'
      responses:
        '401':
          $ref: '#/components/responses/UnauthorizedError'         
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/users_list'
          description: приглашение изменено
        "500":
          description: Ошибка сервера
        "400":
          description: Неверные данные
        "404":
          description: Приглашение не найдено
      x-swagger-router-controller: Admins
  
  /projects/add:
    put:
      security:
        - bearerAuth: []
      tags:
      - admins
      summary: add project without creating in Taiga
      description: |
        Puts project without creating in Taiga. Updates project if it already exists.
      operationId: projectsAddPUT
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/body_3'
      responses:
        '401':
          $ref: '#/components/responses/UnauthorizedError'        
        "201":
          description: project created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Project'
        "200":
          description: project added
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Project'
        "400":
          description: bad request
      x-swagger-router-controller: Admins
  /projects:
    post:
      security:
        - bearerAuth: []
      tags:
      - admins
      summary: creates project
      description: |
        Creates project if number present or just add to db without number
        If project already presents in system then it returns project information
      operationId: createProject
      requestBody:
        description: project to create
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/project_create'
      responses:
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        "201":
          description: project created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Project'
        "200":
          description: project already exists
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Project'
        "400":
          description: bad request
      x-swagger-router-controller: Admins
    get:
      tags:
      - developers
      summary: list all projects
      description: |
        Returns all projects in Taiga with or without number
      operationId: lisAllProjects
      responses:
        "200":
          description: all projects
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Project'
                x-content-type: application/json
      x-swagger-router-controller: Developers
  /projects/{projectNumber}:
    get:
      tags:
      - developers
      summary: returns project by number
      description: Returns project with specified number
      operationId: getProject
      parameters:
      - name: projectNumber
        in: path
        description: Number of the project
        required: true
        style: simple
        explode: false
        schema:
          type: integer
      responses:
      
        "200":
          description: project is returned
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Project'
      x-swagger-router-controller: Developers

components:
  responses:
    UnauthorizedError:
      description: Не были предаставлены данные для авторизации запроса
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
  schemas:
    Project:
      required:
      - fullname
      type: object
      properties:
        id:
          type: integer
          format: uuid
          example: 1
        taiga_id:
          type: integer
          format: uuid
          example: 1
        number:
          type: integer
          example: 239
        fullname:
          type: string
          example: 239 Project Tools
        description:
          type: string
          example: No description
        url:
          type: string
          example: https://track.miem.hse.ru/project/239
      example:
        number: 239
        description: No description
        id: 1
        fullname: 239 Project Tools
        taiga_id: 1
        url: https://track.miem.hse.ru/project/239
    invite_user:
      required:
      - project
      - role
      - email
      type: object
      properties:
        project:
          type: number
          format: uuid
        is_leader:
          type: boolean
        email:
          type: string
        role:
          type: string
    body_1:
      required:
      - email
      type: object
      properties:
        email:
          type: string
    user_patch_example:
      type: object
      properties:
        is_leader:
          type: boolean
          description: особые права администратора 
    body_3:
      required:
      - fullname
      - taiga_id
      type: object
      properties:
        fullname:
          type: string
        description:
          type: string
        number:
          type: integer
        taiga_id:
          type: integer
    project_create:
      required:
      - number
      type: object
      properties:
        number:
          type: integer
    users_list:
      type: object
      properties:
        id:
          type: integer
          format: uuid
          description: id приглашения
        user:
          type: integer
          format: uuid
          description: id пользователя в Тайге
        project:
          type: number
          description: номер проекта
        is_leader:
          type: boolean
          description: особые права администратора пользователя
        email:
          type: string
          description: почта пользователя
        role:
          type: number
          description: id роли пользователя в Тайге
